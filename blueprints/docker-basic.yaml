name: Moff-Docker-Basic
version: v7
inputs:
  env:
    type: string
    oneOf:
      - title: YAR
        const: vsphere
      - title: BDK
        const: aws
    default: vsphere
    title: Select your Datacenter
    description: Select your Target Datacenter
  envsize:
    type: string
    enum:
      - Small
      - Large
    default: Small
    description: Functional or Performance Enviroment
  init_Db:
    type: string
    enum:
      - Maine_Tax_package
      - No_State_Tax_Package
    default: Maine_Tax_package
    title: Select your Package to initialize DB users
    description: Initializes DB with specific tax information
  Extensibility:
    type: boolean
    default: false
    title: Extensibility
    description: Controls when ABX-Tag must be executed
resources:
  Cloud_SecurityGroup_WebServer:
    type: Cloud.SecurityGroup
    properties:
      constraints:
        - tag: moff-sg-webserver
      securityGroupType: existing
  LoadBalancer_1:
    type: Cloud.NSX.LoadBalancer
    properties:
      routes:
        - port: '80'
          protocol: HTTP
          instancePort: '8080'
          instanceProtocol: HTTP
          healthCheckConfiguration:
            port: '8080'
            protocol: HTTP
            urlPath: /index.html
            intervalSeconds: 5
            timeoutSeconds: 15
            unhealthyThreshold: null
            healthyThreshold: 2
      network: '${resource.wpnet.id}'
      instances:
        - '${resource.WebServer.id}'
      internetFacing: true
  WebServer:
    type: Cloud.Machine
    properties:
      image: OAI-Base-Image-1804
      flavor: OAI-R4-Small
      enable_ext: '${input.Extensibility}'
      #      storage:
      #        constraints:
      #          - tag: tier-0
      tags:
        - key: workload
          value: webserver
      remoteAccess:
        authentication: usernamePassword
        username: ubuntu
        password: VMware1!
      constraints:
        - tag: '${"cloud:" + to_lower(input.env)}'
      cloudConfig: |
        hostname: '${"moff-docker-" + to_lower(input.env)}'
        repo_update: true
        repo_upgrade: all
        chpasswd:
          list: |
            ubuntu:VMware1!
          expire: False
          
        packages:
          - mysql-server
        runcmd:
          - sudo apt-get update -y 
          - sudo apt install python-apt -y
          - sudo apt install python-pip -y
          - sudo pip install docker
          - sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
          - sudo /usr/bin/curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          - sudo apt-key fingerprint 0EBFCD88 -y 
          - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          - sudo apt-get update -y 
          - sudo apt-get install docker-ce -y
          - sudo /bin/sed -i 's@ExecStart=/usr/bin/dockerd -H fd://@ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock@' /lib/systemd/system/docker.service
          - sudo /usr/bin/systemctl daemon-reload
          - sudo /usr/bin/systemctl restart docker
          - sudo usermod -aG docker ubuntu
          - sudo apt install aptitude -y
          #- sudo apt install ansible -y 
          - sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g'  /etc/ssh/sshd_config
          - sudo service sshd restart
          - ssh-import-id-lp jfrancisco-poo
          - sudo ssh-import-id-gh moffzilla
          - mkdir /root/website
          - docker run -dit --name moff-web -p 8080:80 -v /root/website/:/usr/local/apache2/htdocs/ httpd:2.4
          - echo 'Hello Tyler Tech World ${resource.WebServer.id}' > /root/website/index.html
      cloudConfigSettings:
        phoneHomeShouldWait: false
        phoneHomeFailOnTimeout: false
        phoneHomeTimeoutSeconds: 300
      networks:
        - network: '${resource.wpnet.id}'
          name: '${resource.wpnet.name}'
          assignment: dynamic
          securityGroups:
            - '${resource.Cloud_SecurityGroup_WebServer.id}'
  wpnet:
    type: Cloud.NSX.Network
    properties:
      networkType: existing
      name: wpnet
      tags:
        - key: mynetwork
          value: mvp
      constraints:
        - tag: '${"cloud:" + to_lower(input.env)}'

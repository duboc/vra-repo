formatVersion: 1
inputs:
  environment:
    type: string
    title: Select your landing zone
    enum:
      - 'platform:vmc'
      - 'platform:aws'
    default: 'platform:vmc'
  vropsCP:
    title: vROps Cloud Proxy IP Address
    type: string
  vraCP:
    title: vRA Cloud Proxy IP Address
    type: string
  refreshToken:
    title: CSP Refresh Token
    type: string
  publicKey:
    type: string
    title: SSH Public Key
    encrypted: true
  wfinstance:
    type: string
    default: 'https://surf.wavefront.com'
    format: hidden
  wftoken:
    type: string
    default: 715bafc8-e5de-4494-b847-859dd12249f9
    format: hidden
  master:
    type: string
    readonly: true
    default: 35.173.128.44
    format: hidden
  wfsource:
    type: string
    default: cd-nats-duboc
    format: hidden
resources:
  frontend_1:
    type: Cloud.Machine
    dependsOn:
      - api_server_1
    properties:
      image: Ubuntu
      flavor: Small
      tags:
        - key: tier
          value: frontend
      constraints:
        - tag: '${input.environment}'
      remoteAccess:
        authentication: publicPrivateKey
        sshKey: '${input.publicKey}'
      cloudConfig: |
        #cloud-config
        repo_update: true
        repo_upgrade: all

        packages:
          - nginx
          - unzip
          
        write_files:
          - path: /etc/nginx/conf.d/nginx.conf
            permissions: '0644'
            content: |
             server {
               listen 81;
               location /basic_status {
                 stub_status;
               }
             }
          - content: |
             project: '${env.projectName}'
             usuario: '${env.requestedBy}'
             App: nginx
             Tier: frontend
            path: /etc/salt/grains

        runcmd: 
          - hostname frontend
          - git clone https://github.com/duboc/cats-and-dogs.git
          - cp -r cats-and-dogs/site/* /var/www/html/
          - cd /var/www/html/js
          - sed -i 's/changecat/${resource.api_server_1.address}/' boot.js
          - sed -i 's/changedog/${resource.api_server_1.address}/' boot.js
          - curl -L https://bootstrap.saltstack.com -o install_salt.sh
          - sudo sh install_salt.sh -A ${input.master}
            #-------------- Cloud Service portal: User/Organization Settings > My Account > API Tokens > Generate a New API Token----------------------#
          - wget --no-check-certificate https://${input.vropsCP}/downloads/salt/download.sh
          - chmod +x download.sh
          - sleep 12m
          - bash download.sh -o install -t ${input.refreshToken} -c ${input.vropsCP}
          - cd /tmp
          - wget https://liagent800.s3.us-east-2.amazonaws.com/VMware-Log-Insight-Agent-8.0.0-14743436.bin
          - chmod +x VMware-Log-Insight-Agent-8.0.0-14743436.bin
          - sudo LIAGENT_SSL=no SERVERHOST=${input.vraCP} SERVERPROTO=cfapi SERVERPORT=9000 /tmp/VMware-Log-Insight-Agent-8.0.0-14743436.bin
        #cloud-config
  api_server_1:
    type: Cloud.Machine
    dependsOn:
      - nats_server_1
    properties:
      image: Ubuntu
      flavor: Small
      tags:
        - key: tier
          value: apiservice
      constraints:
        - tag: '${input.environment}'
      remoteAccess:
        authentication: publicPrivateKey
        sshKey: '${input.publicKey}'
      cloudConfig: |
        #cloud-config
        repo_update: true
        repo_upgrade: true

        packages:
          - unzip

        write_files:
          - content: |
             project: '${env.projectName}'
             usuario: '${env.requestedBy}'
             App: golang-api
             Tier: api-server
            path: /etc/salt/grains

        runcmd:
          - hostname api
          - apt-get update 
          - apt-get upgrade
          - apt-get install docker.io -y
          - systemctl enable docker
          - systemctl restart docker
          - echo "export WAVEFRONT_INSTANCE=${input.wfinstance}" >> /root/.profile
          - echo "export WAVEFRONT_TOKEN=${input.wftoken}" >> /root/.profile
          - echo "export WAVEFRONT_SOURCE=${input.wfsource}" >> /root/.profile
          - echo "export NATS_ENDPOINT=nats://${resource.nats_server_1.address}:4222" >> /root/.profile
          - source /root/.profile
          - git clone https://github.com/duboc/cats-and-dogs
          - docker run --restart=always -d -p 80:80 -e WAVEFRONT_INSTANCE=${input.wfinstance} -e WAVEFRONT_TOKEN=${input.wftoken} -e NATS_ENDPOINT=nats://${resource.nats_server_1.address}:4222 public.ecr.aws/c5s4k8y1/cdbackend-nats:1.0
          - curl -L https://bootstrap.saltstack.com -o install_salt.sh
          - sudo sh install_salt.sh -A ${input.master}
            #-------------- Cloud Service portal: User/Organization Settings > My Account > API Tokens > Generate a New API Token----------------------#
          - wget --no-check-certificate https://${input.vropsCP}/downloads/salt/download.sh
          - chmod +x download.sh
          - sleep 12m
          - bash download.sh -o install -t ${input.refreshToken} -c ${input.vropsCP}
          - cd /tmp
          - wget https://liagent800.s3.us-east-2.amazonaws.com/VMware-Log-Insight-Agent-8.0.0-14743436.bin
          - chmod +x VMware-Log-Insight-Agent-8.0.0-14743436.bin
          - sudo LIAGENT_SSL=no SERVERHOST=${input.vraCP} SERVERPROTO=cfapi SERVERPORT=9000 /tmp/VMware-Log-Insight-Agent-8.0.0-14743436.bin
  mongo_server_1:
    type: Cloud.Machine
    properties:
      image: Ubuntu
      flavor: Small
      tags:
        - key: tier
          value: database
      remoteAccess:
        authentication: publicPrivateKey
        sshKey: '${input.publicKey}'
      constraints:
        - tag: '${input.environment}'
      cloudConfig: |
        #cloud-config
        repo_update: true
        repo_upgrade: all

        write_files:
          - path: /etc/mongod2.conf
            permissions: '0644'
            content: |
             # mongod.conf
             
             # for documentation of all options, see:
             #   http://docs.mongodb.org/manual/reference/configuration-options/
             
             # Where and how to store data.
             storage:
               dbPath: /var/lib/mongodb
               journal:
                 enabled: true
             #  engine:
             #  mmapv1:
             #  wiredTiger:
             
             # where to write logging data.
             systemLog:
               destination: file
               logAppend: true
               path: /var/log/mongodb/mongod.log
             
             # network interfaces
             net:
               port: 27017
               bindIpAll: true
             
             
             # how the process runs
             processManagement:
               timeZoneInfo: /usr/share/zoneinfo
             
             #security:
             #   authorization: enabled
             #operationProfiling:
             
             #replication:
             
             #shard             
             ## Enterprise-Only Options:
             
             #auditLog:
             
             #snmp:
          - content: |
             project: '${env.projectName}'
             usuario: '${env.requestedBy}'
             App: mongodb
             Tier: database
            path: /etc/salt/grains

        packages:
          - unzip

        runcmd:
          - hostname mongodb
          - wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -
          - echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list
          - apt-get update -y
          - apt-get install -y mongodb-org
          - cp /etc/mongod.conf /etc/mongod.old
          - mv /etc/mongod2.conf /etc/mongod.conf
          - chmod 644 /etc/mongod.conf
          - service mongod start
          - curl -L https://bootstrap.saltstack.com -o install_salt.sh
          - sudo sh install_salt.sh -A ${input.master}
            #-------------- Cloud Service portal: User/Organization Settings > My Account > API Tokens > Generate a New API Token----------------------#
          - wget --no-check-certificate https://${input.vropsCP}/downloads/salt/download.sh
          - chmod +x download.sh
          - sleep 12m
          - bash download.sh -o install -t ${input.refreshToken} -c ${input.vropsCP}
          - cd /tmp
          - wget https://liagent800.s3.us-east-2.amazonaws.com/VMware-Log-Insight-Agent-8.0.0-14743436.bin
          - chmod +x VMware-Log-Insight-Agent-8.0.0-14743436.bin
          - sudo LIAGENT_SSL=no SERVERHOST=${input.vraCP} SERVERPROTO=cfapi SERVERPORT=9000 /tmp/VMware-Log-Insight-Agent-8.0.0-14743436.bin
  nats_server_1:
    type: Cloud.Machine
    dependsOn:
      - mongo_server_1
    properties:
      image: Ubuntu
      flavor: Small
      tags:
        - key: tier
          value: nats
      constraints:
        - tag: '${input.environment}'
      remoteAccess:
        authentication: publicPrivateKey
        sshKey: '${input.publicKey}'
      cloudConfig: |
        #cloud-config
        repo_update: true
        repo_upgrade: all

        write_files:
          - content: |
             project: '${env.projectName}'
             usuario: '${env.requestedBy}'
             App: nats
             Tier: queue
            path: /etc/salt/grains

        packages:
          - unzip

        runcmd:
          - hostname nats
          - apt-get update 
          - apt-get upgrade
          - apt-get install docker.io -y
          - systemctl enable docker
          - systemctl restart docker
          - docker run --restart=always -d -p 4222:4222 -p 8222:8222 public.ecr.aws/c5s4k8y1/nats:2.1.2
          - curl -L https://bootstrap.saltstack.com -o install_salt.sh
          - sudo sh install_salt.sh -A ${input.master}
            #-------------- Cloud Service portal: User/Organization Settings > My Account > API Tokens > Generate a New API Token----------------------#
          - wget --no-check-certificate https://${input.vropsCP}/downloads/salt/download.sh
          - chmod +x download.sh
          - sleep 12m
          - bash download.sh -o install -t ${input.refreshToken} -c ${input.vropsCP}
          - cd /tmp
          - wget https://liagent800.s3.us-east-2.amazonaws.com/VMware-Log-Insight-Agent-8.0.0-14743436.bin
          - chmod +x VMware-Log-Insight-Agent-8.0.0-14743436.bin
          - sudo LIAGENT_SSL=no SERVERHOST=${input.vraCP} SERVERPROTO=cfapi SERVERPORT=9000 /tmp/VMware-Log-Insight-Agent-8.0.0-14743436.bin
  queue_service_1:
    type: Cloud.Machine
    dependsOn:
      - nats_server_1
    properties:
      image: Ubuntu
      flavor: Small
      tags:
        - key: tier
          value: queue_service
      constraints:
        - tag: '${input.environment}'
      remoteAccess:
        authentication: publicPrivateKey
        sshKey: '${input.publicKey}'
      cloudConfig: |
        #cloud-config
        repo_update: true
        repo_upgrade: true

        write_files:
          - content: |
             project: '${env.projectName}'
             usuario: '${env.requestedBy}'
             App: golang-queue
             Tier: queue-mservice
            path: /etc/salt/grains

        packages:
          - unzip

        runcmd:
          - hostname queue
          - apt-get update 
          - apt-get upgrade
          - apt-get install docker.io -y
          - systemctl enable docker
          - systemctl restart docker
          - echo "export NATS_ENDPOINT=nats://${resource.nats_server_1.address}:4222" >> /root/.profile
          - echo "export MONGODB_ENDPOINT=mongodb://${resource.mongo_server_1.address}" >> /root/.profile
          - source /root/.profile
          - git clone https://github.com/duboc/cats-and-dogs
          - docker run --restart=always -d -e NATS_ENDPOINT=nats://${resource.nats_server_1.address}:4222 -e MONGODB_ENDPOINT=mongodb://${resource.mongo_server_1.address} public.ecr.aws/c5s4k8y1/cdbackend-mongo:1.0
          - curl -L https://bootstrap.saltstack.com -o install_salt.sh
          - sudo sh install_salt.sh -A ${input.master}
            #-------------- Cloud Service portal: User/Organization Settings > My Account > API Tokens > Generate a New API Token----------------------#
          - wget --no-check-certificate https://${input.vropsCP}/downloads/salt/download.sh
          - chmod +x download.sh
          - sleep 12m
          - bash download.sh -o install -t ${input.refreshToken} -c ${input.vropsCP}
          - cd /tmp
          - wget https://liagent800.s3.us-east-2.amazonaws.com/VMware-Log-Insight-Agent-8.0.0-14743436.bin
          - chmod +x VMware-Log-Insight-Agent-8.0.0-14743436.bin
          - sudo LIAGENT_SSL=no SERVERHOST=${input.vraCP} SERVERPROTO=cfapi SERVERPORT=9000 /tmp/VMware-Log-Insight-Agent-8.0.0-14743436.bin
